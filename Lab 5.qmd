---
title: "Lab 5"
format: html
editor: visual
---

Name : Liying Deng

```{r}
library(data.table)
library(dtplyr)
library(dplyr)
library(ggplot2)
met_url <- "https://github.com/USCbiostats/data-science-data/raw/master/02_met/met_all.gz"
tmp <- "met.gz"
if (!file.exists(tmp)) {
  download.file(
    url      = met_url,
    destfile = tmp,
  )
}
dat <- fread(tmp)
head(dat)
dat <- as.data.frame(dat)
stations <- fread("https://noaa-isd-pds.s3.amazonaws.com/isd-history.csv")
stations[, USAF := as.integer(USAF)]
stations[, USAF   := fifelse(USAF == 999999, NA_integer_, USAF)]
stations[, CTRY   := fifelse(CTRY == "", NA_character_, CTRY)]
stations[, STATE  := fifelse(STATE == "", NA_character_, STATE)]
stations <- unique(stations[, list(USAF, CTRY, STATE)])
stations <- stations[!is.na(USAF)]
stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]
dat <- merge(
  x     = dat,      
  y     = stations, 
  by.x  = "USAFID",
  by.y  = "USAF", 
  all.x = TRUE,      
  all.y = FALSE
  )
head(dat[, c('USAFID', 'WBAN', 'STATE')], n = 4)
```

#Question 1

```{r}
median_temp <- quantile(dat$temp, probs = 0.5, na.rm = TRUE)
median_wind <- quantile(dat$wind.sp, probs = 0.5, na.rm = TRUE)
median_pressure <- quantile(dat$atm.press, probs = 0.5, na.rm = TRUE)
names(dat)
median_temp_station <- dat[which.min(abs(dat$temp - median_temp)), ]
median_wind_station <- dat[which.min(abs(dat$wind.sp - median_wind)), ]
median_pressure_station <- dat[which.min(abs(dat$atm.press - median_pressure)), ]
median_temp_station
median_wind_station
median_pressure_station
```

#Yes, they are coincide.

#Question 2

```{r}
library(dplyr)
library(data.table)
str(dat)
colnames(dat)
dat <- dat %>%
  filter(!is.na(temp) & !is.na(wind.sp) & !is.na(atm.press))
medians_by_STATE <- dat %>%
  group_by(STATE) %>%
  summarise(
    median_temp = median(temp, na.rm = TRUE),
    median_wind = median(wind.sp, na.rm = TRUE),
    median_pressure = median(atm.press, na.rm = TRUE)
  )
(medians_by_STATE)
dat_with_medians <- merge(dat, medians_by_STATE, by = "STATE")
setDT(dat_with_medians)
dat_with_medians[, euclidean_distance := sqrt(
  (temp - median_temp)^2 +
  (wind.sp - median_wind)^2 +
  (atm.press - median_pressure)^2
)]
median_distance_per_state <- dat_with_medians[, .(median_distance = median(euclidean_distance, na.rm = TRUE)), by = STATE]
dat_with_medians <- merge(dat_with_medians, median_distance_per_state, by = "STATE")
closest_stations <- dat_with_medians[, .SD[which.min(abs(euclidean_distance - median_distance))], by = STATE]
closest_stations <- closest_stations[, .SD[which.min(lat)], by = STATE]
head(closest_stations)
```

#Question 3

```{r}
library(leaflet)
pal <- colorFactor(palette = c("blue", "pink"), domain = closest_stations$state)
leaflet(data = closest_stations) %>%
  addProviderTiles("CartoDB.Positron") %>%
  addCircles(
    lat = ~lat, lng = ~lon,
    color = ~pal(STATE),
    label = ~paste("Station in:", STATE),
    radius = 100,
  ) %>%
  addLegend(
    position = "bottomright",
    pal = pal,
    values = ~STATE,
    title = "STATE",
    opacity = 1
  )
```
#Question 4

```{r}
avg_temp_by_state <- dat %>%
  group_by(STATE) %>%
  summarise(avg_temp = mean(temp, na.rm = TRUE))
avg_temp_by_state <- avg_temp_by_state %>%
  mutate(temp_level = case_when(
    avg_temp < 20 ~ "low",
    avg_temp >= 20 & avg_temp < 25 ~ "mid",
    avg_temp >= 25 ~ "high"
  ))
dat_with_levels <- merge(dat, avg_temp_by_state, by = "STATE")
# Summarize data by temperature level
summary_table <- dat_with_levels %>%
  group_by(temp_level) %>%
  summarise(
    num_records = n(),
    num_temp = sum(is.na(temp)),
    num_wind = sum(is.na(wind.sp)),
    num_pressure = sum(is.na(atm.press)),
    num_stations = n_distinct(USAFID),
    num_states = n_distinct(STATE),
    mean_temp = mean(temp, na.rm = TRUE),
    mean_wind = mean(wind.sp, na.rm = TRUE),
    mean_pressure = mean(atm.press, na.rm = TRUE)
  )
(summary_table)
```
